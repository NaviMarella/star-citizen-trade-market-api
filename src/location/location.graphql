type Query {
  locations(searchInput: LocationSearchInput): [Location]
  location(id: ID!): Location
}

type Mutation {
  createLocation(input: CreateLocationInput!): Location!
  updateLocation(id: ID!, input: UpdateLocationInput!): Location!
}

type Subscription {
  locationCreated: Location!
  locationUpdated: Location!
}

type Location {
  id: ID!
  name: String!
  parentLocationId: ID
  parentLocation: Location
  typeId: ID!
  type: LocationType!
  inGameSinceVersionId: ID!
  inGameSinceVersion: GameVersion!
  inGameSince: Date
  canTrade: Boolean!
  children: [Location!]!
}

input CreateLocationInput {
  name: String!
  parentLocationId: ID
  typeId: ID!
  inGameSinceVersionId: ID!
  inGameSince: Date
  canTrade: Boolean
}

input UpdateLocationInput {
  name: String
  parentLocationId: ID
  typeId: ID
  inGameSinceVersionId: ID
  inGameSince: Date
  canTrade: Boolean
}

input LocationSearchInput {
  canTrade: Boolean
}
