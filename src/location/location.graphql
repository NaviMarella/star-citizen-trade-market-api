type Query {
	locations: [Location]
	location(id: ID!): Location
}

type Mutation {
	createLocation(input: CreateLocationInput!): Location!
	updateLocation(id: ID!, input: UpdateLocationInput!): Location!
}

type Subscription {
	locationCreated: Location!
	locationUpdated: Location!
}

type Location {
	id: ID!
	name: String!
	parentLocationId: ID
	parentLocation: Location
	typeId: ID!
	type: LocationType!
	inGameSinceVersionId: ID!
	inGameSinceVersion: GameVersion!
	inGameSince: Date
	children: [Location!]!
}

input CreateLocationInput {
	name: String!
	parentLocationId: ID
	typeId: ID!
	inGameSinceVersionId: ID!
	inGameSince: Date
}

input UpdateLocationInput {
	name: String
	parentLocationId: ID
	typeId: ID
	inGameSinceVersionId: ID
	inGameSince: Date
}
