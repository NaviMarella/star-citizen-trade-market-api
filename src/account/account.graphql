type Query {
	accounts: [Account]
	account(id: ID!): Account
	signIn(username: String!, password: String!): AuthToken
}

type Mutation {
	signUp(input: CreateAccountInput!): Account!
}

type Subscription {
	accountSignedUp: Account!
}

enum Role {
	USER
	ADVANCED
	USERADMIN
	ADMIN
}

type Account {
	id: ID!
	username: String!
	handle: String!
	email: String
	roles: [Role!]
	mainOrganizationId: ID
	mainOrganization: Organization
}

type AuthToken {
	id: ID!
	username: String!
	roles: [Role!]
	token: String!
}

input CreateAccountInput {
	username: String!
	handle: String!
	email: String!
}
